// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cafe {
  id  Int @id @default(autoincrement())
  nome String
  tipo String
  preco Float
  descricao String
  tags TagCafe[]
  itensPedido ItemPedido[]  
}

model TagCafe {
  id      Int @id @default(autoincrement())
  nome    String
  cafeId  Int 
  cafe    Cafe @relation(fields: [cafeId] , references: [id])
}

model Cliente {
  id       Int     @id @default(autoincrement())
  nome     String
  email    String  @unique
  cpf      String  @unique
  telefone String

  pedidos  Pedido[]
}

model Pedido {
  id             Int          @id @default(autoincrement())
  dataPedido     DateTime    
  totalPedido    Float
  clienteId      Int
  cliente        Cliente      @relation(fields: [clienteId], references: [id])
  itens          ItemPedido[]
  entrega        Entrega?
}

model ItemPedido {
  id         Int     @id @default(autoincrement())
  pedidoId   Int
  cafeId     Int
  quantidade Int
  precoUnit  Float

  pedido     Pedido  @relation(fields: [pedidoId], references: [id])
  cafe       Cafe    @relation(fields: [cafeId], references: [id])
}

model Entrega {
  id                 Int      @id @default(autoincrement())
  endereco           String
  status             Status
  dataPrevista       DateTime
  pedidoId           Int      @unique
  pedido             Pedido   @relation(fields: [pedidoId], references: [id])
}

enum Status {
  pendente
  em_transito
  entregue
}
